import streamlit as st
import pandas as pd
# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(page_title="–£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤", layout="wide")
st.title("üéì –î–∞—à–±–æ—Ä–¥ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É ‚Äì —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤")

# –®–ª—è—Ö –¥–æ CSV (–∞–≤—Ç–æ–ø—ñ–¥–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è)
csv_path = "students.csv"

if os.path.exists(csv_path):
    df = pd.read_csv(csv_path)
    df["–û—Ü—ñ–Ω–∫–∞"] = pd.to_numeric(df["–û—Ü—ñ–Ω–∫–∞"], errors="coerce")

    # –§—ñ–ª—å—Ç—Ä–∏
    col1, col2, col3 = st.columns(3)
    with col1:
        group_filter = st.selectbox("–ì—Ä—É–ø–∞", ["–í—Å—ñ"] + df["–ì—Ä—É–ø–∞"].unique().tolist())
    with col2:
        subject_filter = st.selectbox("–ü—Ä–µ–¥–º–µ—Ç", ["–í—Å—ñ"] + df["–ü—Ä–µ–¥–º–µ—Ç"].unique().tolist())
    with col3:
        semester_filter = st.selectbox("–°–µ–º–µ—Å—Ç—Ä", ["–í—Å—ñ"] + df["–°–µ–º–µ—Å—Ç—Ä"].astype(str).unique().tolist())

    # –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö
    filtered_df = df.copy()
    if group_filter != "–í—Å—ñ":
        filtered_df = filtered_df[filtered_df["–ì—Ä—É–ø–∞"] == group_filter]
    if subject_filter != "–í—Å—ñ":
        filtered_df = filtered_df[filtered_df["–ü—Ä–µ–¥–º–µ—Ç"] == subject_filter]
    if semester_filter != "–í—Å—ñ":
        filtered_df = filtered_df[filtered_df["–°–µ–º–µ—Å—Ç—Ä"].astype(str) == semester_filter]

    st.subheader("–í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ")
    st.dataframe(filtered_df)

    # –î—ñ–∞–≥—Ä–∞–º–∞ —Å–µ—Ä–µ–¥–Ω—ñ—Ö –æ—Ü—ñ–Ω–æ–∫
    if not filtered_df.empty:
        avg = filtered_df.groupby("–ü—Ä–µ–¥–º–µ—Ç")["–û—Ü—ñ–Ω–∫–∞"].mean().sort_values()
        fig, ax = plt.subplots(figsize=(8, max(3, 0.4 * len(avg))))
        sns.barplot(x=avg.values, y=avg.index, ax=ax, palette="viridis")
        ax.set_xlabel("–°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞")
        ax.set_ylabel("–ü—Ä–µ–¥–º–µ—Ç")
        ax.set_title("–°–µ—Ä–µ–¥–Ω—ñ –æ—Ü—ñ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤")
        st.pyplot(fig)

        st.metric("üìä –°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞ –≤–∏–±—ñ—Ä–∫–∏", f"{filtered_df['–û—Ü—ñ–Ω–∫–∞'].mean():.2f}")
    else:
        st.warning("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞ —Å–µ—Ä–µ–¥–Ω—ñ—Ö –æ—Ü—ñ–Ω–æ–∫.")

    # –ö–æ—Ä–µ–ª—è—Ü—ñ–π–Ω–∏–π –∞–Ω–∞–ª—ñ–∑
    pivot = filtered_df.pivot_table(index="–ü–Ü–ë", columns="–ü—Ä–µ–¥–º–µ—Ç", values="–û—Ü—ñ–Ω–∫–∞")
    if pivot.shape[1] >= 2:
        corr = pivot.corr()
        fig2, ax2 = plt.subplots(figsize=(7, max(4, 0.5 * len(corr))))
        sns.heatmap(corr, annot=True, cmap="coolwarm", fmt=".2f", ax=ax2, vmin=-1, vmax=1)
        ax2.set_title("–ö–æ—Ä–µ–ª—è—Ü—ñ–π–Ω–∞ –º–∞—Ç—Ä–∏—Ü—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤")
        st.pyplot(fig2)
        st.info("–ö–æ—Ä–µ–ª—è—Ü—ñ—è –ø–æ–∫–∞–∑—É—î, —è–∫—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –º–∞—é—Ç—å —Å—Ö–æ–∂—ñ —Ç–µ–Ω–¥–µ–Ω—Ü—ñ—ó –≤ –æ—Ü—ñ–Ω–∫–∞—Ö —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤.")
    else:
        st.warning("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –∫–æ—Ä–µ–ª—è—Ü—ñ—ó.")
else:
    st.error(f"–§–∞–π–ª {csv_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–æ–º—ñ—Å—Ç—ñ—Ç—å CSV —É —Ç—É –∂ –ø–∞–ø–∫—É, —â–æ —ñ —Å–∫—Ä–∏–ø—Ç.")

   

